/**
 * Concept parsing utility functions
 */

import { AIConceptResponse } from '../services/conceptGenerationService';

/**
 * Clean AI response by removing markdown formatting
 */
export function cleanAIResponse(response: string): string {
  let cleanResponse = response.trim();

  // Remove markdown code blocks if present
  if (cleanResponse.startsWith('```json')) {
    cleanResponse = cleanResponse
      .replace(/^```json\s*/, '')
      .replace(/\s*```$/, '');
  } else if (cleanResponse.startsWith('```')) {
    cleanResponse = cleanResponse
      .replace(/^```\s*/, '')
      .replace(/\s*```$/, '');
  }

  // Try to extract JSON from the response
  const jsonMatch = cleanResponse.match(/\{[\s\S]*\}/);
  if (jsonMatch) {
    cleanResponse = jsonMatch[0];
  }

  return cleanResponse;
}

/**
 * Parse AI response into structured concept data
 */
export function parseAIResponse(response: string): AIConceptResponse {
  try {
    const cleanResponse = cleanAIResponse(response);
    const parsed = JSON.parse(cleanResponse);

    // Validate required fields
    if (!parsed.title || !parsed.description || !parsed.keyMessage) {
      throw new Error('AI response missing required fields');
    }

    // Ensure all required fields are present with defaults
    return {
      title: parsed.title || 'AI Generated Concept',
      description:
        parsed.description ||
        'A creative advertising concept generated by AI',
      keyMessage: parsed.keyMessage || 'Experience the difference',
      category: parsed.category || 'Brand Awareness',
      visualElements: Array.isArray(parsed.visualElements)
        ? parsed.visualElements
        : ['Professional imagery', 'Clear messaging', 'Brand elements'],
      callToAction: parsed.callToAction || 'Learn More',
      estimatedReach:
        typeof parsed.estimatedReach === 'number'
          ? parsed.estimatedReach
          : 15000,
      estimatedEngagement:
        typeof parsed.estimatedEngagement === 'number'
          ? parsed.estimatedEngagement
          : 12,
    };
  } catch (error) {
    console.error('Failed to parse AI response:', error);
    throw new Error('Invalid AI response format');
  }
}

/**
 * Validate parsed concept data
 */
export function validateConceptData(data: AIConceptResponse): boolean {
  return !!(
    data.title &&
    data.description &&
    data.keyMessage &&
    data.category &&
    Array.isArray(data.visualElements) &&
    data.visualElements.length > 0 &&
    data.callToAction &&
    typeof data.estimatedReach === 'number' &&
    typeof data.estimatedEngagement === 'number'
  );
}
